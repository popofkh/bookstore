<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zju.cst.bookstore.mbg.mapper.RolePriviledgeRelMapper">
  <resultMap id="BaseResultMap" type="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRel">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="role_id" jdbcType="CHAR" property="roleId" />
    <result column="priviledge_id" jdbcType="CHAR" property="priviledgeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, available, role_id, priviledge_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_priviledge_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_priviledge_rel
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role_priviledge_rel
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRelExample">
    delete from role_priviledge_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRel">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),"-","")
    </selectKey>
    insert into role_priviledge_rel (id, available, role_id, 
      priviledge_id, create_time, update_time
      )
    values (#{id,jdbcType=CHAR}, #{available,jdbcType=BIT}, #{roleId,jdbcType=CHAR}, 
      #{priviledgeId,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRel">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),"-","")
    </selectKey>
    insert into role_priviledge_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="available != null">
        available,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="priviledgeId != null">
        priviledge_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=CHAR},
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="priviledgeId != null">
        #{priviledgeId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRelExample" resultType="java.lang.Long">
    select count(*) from role_priviledge_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role_priviledge_rel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=BIT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=CHAR},
      </if>
      <if test="record.priviledgeId != null">
        priviledge_id = #{record.priviledgeId,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role_priviledge_rel
    set id = #{record.id,jdbcType=CHAR},
      available = #{record.available,jdbcType=BIT},
      role_id = #{record.roleId,jdbcType=CHAR},
      priviledge_id = #{record.priviledgeId,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRel">
    update role_priviledge_rel
    <set>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=CHAR},
      </if>
      <if test="priviledgeId != null">
        priviledge_id = #{priviledgeId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zju.cst.bookstore.mbg.model.RolePriviledgeRel">
    update role_priviledge_rel
    set available = #{available,jdbcType=BIT},
      role_id = #{roleId,jdbcType=CHAR},
      priviledge_id = #{priviledgeId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>